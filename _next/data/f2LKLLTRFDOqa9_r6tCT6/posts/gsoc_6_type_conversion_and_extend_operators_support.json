{"pageProps":{"blog":{"content":"<h1 id=\"hey-there-ðŸ¤—-welcome-to-my-gsoc-journey\">Hey there ðŸ¤—, Welcome to my GSoC Journey</h1>\n<p>This is a series of blogs that I am writing to share my amazing <strong>GSoC 22</strong> (Google Summer of Code 2022) Journey with you all. </p>\n<hr>\n<h1 id=\"type-conversions-and-supporting-more-operators\">Type Conversions and Supporting More Operators</h1>\n<p>This week, I worked on</p>\n<ul>\n<li>adding type conversion support to the <code>LFortran</code> <code>WASM</code> Backend</li>\n<li>supporting relational operators for integer (<code>i32</code> and <code>i64</code>), real (<code>f32</code> and <code>f64</code>), logical types</li>\n<li>supporting logical operators</li>\n</ul>\n<p>With the help of <code>type-casting</code> and <code>logical</code> as well as <code>relational</code> operators, this week, we extended support to the previous weeks <code>if-else</code> implementation.\nNext week, we will try to add support for <code>loop</code> in the <code>wasm</code> Backend. We will also, hopefully, add/enable <code>wasm</code> testing on <code>CI</code> in the coming week.</p>\n<p>This phase was mostly/approximately from <code>02-07-2022</code> to <code>08-07-2022</code>.</p>\n<p>The MRs during this phase are as follows:</p>\n<ul>\n<li><a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1822\">!1822 WASM: Add Cast Support</a></li>\n<li><a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1823\">!1823 WASM: Support Relational Operators</a></li>\n<li><a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1824\">!1824 WASM: Support Logical Operators</a></li>\n</ul>\n<hr>\n<p>That's all for this blog. Thank you for your time. We continue this series in the next blog.</p>\n","frontmatter":{"slug":"gsoc_6_type_conversion_and_extend_operators_support","excerpt":"GSoC 22: Blog 6","title":"Type Conversions and Supporting More Operators","publishedAt":"2022-07-08","day":"July 8, 2022","readingTime":"1 min read"}}},"__N_SSG":true}