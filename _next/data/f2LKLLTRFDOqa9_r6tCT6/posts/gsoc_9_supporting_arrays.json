{"pageProps":{"blog":{"content":"<h1 id=\"hey-there-ðŸ¤—-welcome-to-my-gsoc-journey\">Hey there ðŸ¤—, Welcome to my GSoC Journey</h1>\n<p>This is a series of blogs that I am writing to share my amazing <strong>GSoC 22</strong> (Google Summer of Code 2022) Journey with you all.</p>\n<hr>\n<h1 id=\"initial-support-for-arrays\">Initial Support for Arrays</h1>\n<p>This week, I worked towards supporting <code>Arrays</code> in the <code>WebAssembly</code> Backend.\nThe <code>WebAssembly</code> Backend now supports <code>1D</code> <code>Integer</code>, <code>Real</code> and <code>Logical</code> <code>Arrays</code>.</p>\n<p>One of the challenges this week was the unexpected the call stack being observed.\nFor example, for the following statment:</p>\n<pre><code class=\"hljs language-python\">x = [ <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">8</span> ]\n</code></pre>\n<p>The <code>visitor</code> functions that are expected to be called are <code>visit_Assignment()</code> followed by <code>visit_Var()</code> and <code>visit_ArrayConstant()</code>.\nIn practice, the <code>visitor</code> function call stack that was being experienced was <code>visit_Assignment()</code> followed by <code>visit_ArrayItem()</code> and <code>visit_IntegerConstant()</code>.\nThis experienced call stack was completely <code>out-of-sync</code> with the expected call stack.\nAfter some debugging attempts with no success, I reached out to mentors about the issue.</p>\n<p>Fortunately, one of the mentors (<a href=\"https://github.com/czgdp1807\">@Gangandeep</a>) understood the anomaly straightaway and shared that\nthere is a <code>pass_replace_implied_do_loops()</code> which was transforming the statment</p>\n<pre><code class=\"hljs language-python\">x = [ <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">7</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">8</span> ]\n</code></pre>\n<p>into a <code>DoLoop</code> as follows:</p>\n<pre><code class=\"hljs language-python\">do i = <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>\n    x[i] = value_from_the_constant_list\nend do\n</code></pre>\n<p>and that is why, the calls to <code>visit_ArrayItem()</code> and <code>visit_IntegerConstant()</code>.\nThank you so much <a href=\"https://github.com/czgdp1807\">@Gangandeep</a> for helping me.\nI think without you this issue would have taken a lot more time.</p>\n<p>This phase was mostly/approximately from <code>23-07-2022</code> to <code>29-07-2022</code>.</p>\n<p>The MRs during this phase are as follows:</p>\n<ul>\n<li><a href=\"https://github.com/lfortran/lfortran/pull/49\">WASM: Initial support for Arrays #49</a></li>\n<li><a href=\"https://github.com/lfortran/lfortran/pull/55\">WAT: Arrays Fix #55</a></li>\n<li><a href=\"https://github.com/lfortran/lfortran/pull/66\">WASM: Support Real and Logical types with Arrays #66</a></li>\n</ul>\n<hr>\n<p>That's all for this blog. Thank you for your time. We continue this series in the next blog.</p>\n","frontmatter":{"slug":"gsoc_9_supporting_arrays","excerpt":"GSoC 22: Blog 9","title":"Initial Support for Arrays","publishedAt":"2022-07-29","day":"July 29, 2022","readingTime":"2 min read"}}},"__N_SSG":true}