{"pageProps":{"blog":{"content":"<h1 id=\"hey-there-ðŸ¤—-welcome-to-my-gsoc-journey\">Hey there ðŸ¤—, Welcome to my GSoC Journey</h1>\n<p>This is a series of blogs that I am writing to share my amazing <strong>GSoC 22</strong> (Google Summer of Code 2022) Journey with you all. </p>\n<hr>\n<h1 id=\"adding-print-support-and-deploying-on-live-site\">Adding Print support and Deploying on Live Site</h1>\n<p>In this week, I-  </p>\n<ul>\n<li>added support for printing in the generated wasm binary</li>\n<li>added support for stop and error stop</li>\n<li>built the LCompilers Frontend for <code>LFortran</code> (compiled to <code>wasm</code>) and deployed it to <code>GitHub Pages</code> with the compiled <code>lfortran wasm binary</code>.</li>\n</ul>\n<p>I also worked on my <strong>Compiling LFortran to wasm</strong> task of Week/Blog 2. The same blog has been updated and can be found <a href=\"/blogs/gsoc_2_llvm_wasm_backend_and_build_to_wasm\">here</a>.</p>\n<p>During this weeks endeavour, I faced challenges at two places:</p>\n<ol>\n<li><p>After upgrading my <code>node</code> version (as stated <a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1789#note_991964306\">here</a>), my <code>emscripten</code> stopped working.\nI needed <code>emscripten</code> to compile <code>LFortran</code> to <code>wasm</code>. Things started working when I successfully uninstalled my upgraded <code>node</code> and reinstalled <code>emscripten</code>.\nAnd I was able to build <code>LFortran</code> to <code>wasm</code> using <code>emscripten</code>.</p>\n</li>\n<li><p>Even though <code>emscripten</code> was fixed and <code>LFortran</code> was successfully compiling to <code>wasm</code>, it did not have <code>C++ exceptions</code> support.\nAs per <a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1549\">!1549</a>, we need to add the flag <code>-fexceptions</code> to enable exception support.\nEven after including the <code>-fexceptions</code> flags, exceptions were still not being supported.\nWithout <code>exceptions</code> support the <code>LCompilers Frontend</code> was not showing the hints/feedback if there were errors in the source code.\nI tried different combination of <code>emscripten</code> flags and finally found that </p>\n<ul>\n<li>the flag <code>-s STANDALONE_WASM</code> was somehow not-allowing/disabling <code>exceptions</code> support</li>\n<li>apart from including <code>-fexceptions</code> as <code>emscripten</code> flags, <code>-fexceptions</code> is also needed to be included as <code>CXX_DEBUG_FLAGS</code> in the <code>build_to_wasm.sh</code> script</li>\n</ul>\n</li>\n</ol>\n<p>This phase was mostly/approximately from <code>18-06-2022</code> to <code>24-06-2022</code>.</p>\n<p>The MRs during this phase are as follows:</p>\n<ul>\n<li><a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1794\">!1794 WASM: Add print support</a></li>\n<li><a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1795\">!1795 WASM: parse empty source code</a></li>\n<li><a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1797\">!1797 WASM: Add support for stop and error stop</a></li>\n</ul>\n<p>Also,</p>\n<p>GitHub Repo for Frontend: <a href=\"https://github.com/Shaikh-Ubaid/lcompilers_frontend\">https://github.com/Shaikh-Ubaid/lcompilers_frontend</a></p>\n<p>Live Site: <a href=\"https://shaikh-ubaid.github.io/lcompilers_frontend/\">https://shaikh-ubaid.github.io/lcompilers_frontend/</a></p>\n<p>Upcoming Tasks for next week:</p>\n<ul>\n<li>Building a NodeJS testing infrastructure <a href=\"https://gitlab.com/lfortran/lfortran/-/issues/712\">#712</a></li>\n<li>Adding support for <code>if-else</code> statements in the <code>WASM Backend</code> <a href=\"https://gitlab.com/lfortran/lfortran/-/issues/700\">#700</a></li>\n</ul>\n<hr>\n<p>That's all for this blog. Thank you for your time. We continue this series in the next blog.</p>\n","frontmatter":{"slug":"gsoc_4_print_and_lcompilers_frontend","excerpt":"GSoC 22: Blog 4","title":"Adding Print support and Deploying on Live Site","publishedAt":"2022-06-24","day":"June 24, 2022","readingTime":"2 min read"}}},"__N_SSG":true}