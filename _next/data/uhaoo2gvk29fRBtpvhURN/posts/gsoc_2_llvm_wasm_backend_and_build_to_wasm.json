{"pageProps":{"blog":{"content":"<h1 id=\"hey-there-ðŸ¤—-welcome-to-my-gsoc-journey\">Hey there ðŸ¤—, Welcome to my GSoC Journey</h1>\n<p>This is a series of blogs that I am writing to share my amazing <strong>GSoC 22</strong> (Google Summer of Code 2022) Journey with you all. </p>\n<hr>\n<h1 id=\"enabling-llvm-based-wasm-backend-and-build-lfortran-to-wasm\">Enabling LLVM Based WASM Backend and Build LFortran to WASM</h1>\n<p>Once we had testing enabled for the <code>wasm</code>-<code>wat</code> backends, our next goals were</p>\n<ol>\n<li>To Enable <code>LLVM</code> based <code>WASM</code> Backend</li>\n<li>To Compile <code>LFortran</code> to <code>WASM</code></li>\n</ol>\n<p>The <code>LLVM</code> based <code>WASM</code> backend is usefull for the release mode of <code>LFortran</code>, \nas it could generate a fast binary (although compilation may be slow).\nA Challenge here is to get the <code>C runtime library</code> working.</p>\n<p>Enabling <code>LLVM</code> based <code>WASM</code> Backend was perviously tried at <a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/\">!1385</a>.\nI tried exaclty the same steps as in the MR <a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1768\">!1768</a>, but no luck.\nAfter much trial and error of trying different tools and different commands for those tools,\nI found a way to use <code>emscripten</code> to achieve our target.\nSome test cases compile and run smoothly, where as, some throw a warning/error about <code>mismatch</code> in <code>function signatures</code>.\nMore details about this is available on the same MR <a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1768\">!1768</a></p>\n<p>This phase was mostly/approximately from <code>05-06-2022</code> to <code>12-06-2022</code>.</p>\n<p>The MRs during this phase are as follows:</p>\n<ul>\n<li><a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1768\">!1768</a></li>\n<li><a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1769\">!1769</a></li>\n<li><a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1796\">!1796</a></li>\n</ul>\n<p>I also tried to <code>build</code>/<code>compile</code> <code>LFortran</code> to <code>wasm</code> during this phase. \nIt seems to work. \nI am yet to make an official <code>MR</code> regarding the same.\nI will update here as soon as I make a <code>MR</code>.</p>\n<p><strong>Update:</strong> \nI made an official <code>MR</code> at <a href=\"https://gitlab.com/lfortran/lfortran/-/merge_requests/1796\">!1796 WASM: Compile/Build LFortran to WASM</a> \n(also updated in the above MRs list).</p>\n<hr>\n<p>That's all for this blog. Thank you for your time. We continue this series in the next blog.</p>\n","frontmatter":{"slug":"gsoc_2_llvm_wasm_backend_and_build_to_wasm","excerpt":"GSoC 22: Blog 2","title":"Enabling LLVM Based WASM Backend and Build LFortran to WASM","publishedAt":"2022-06-17","day":"June 17, 2022","readingTime":"2 min read"}}},"__N_SSG":true}